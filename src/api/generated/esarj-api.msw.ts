/**
 * Generated by orval v6.21.0 🍺
 * Do not edit manually.
 * Swagger Esarj
 * OpenAPI spec version: 1.0.0
 */
import { HttpResponse, delay, http } from 'msw';

export const getListUsersMock = () => [
  {
    id: 6486868573028352,
    personCompany: 'Hazel Zulauf Sr.',
    status: 1,
    accountType: 1,
    customerId: '0004540',
  },
  {
    id: 176660582236160,
    personCompany: 'non-volatile',
    status: 2,
    accountType: 2,
    customerId: '0041280',
  },
  {
    id: 2371326771724288,
    personCompany: 'Manuel Gerhold',
    status: 1,
    accountType: 1,
    customerId: '0004104',
  },
  {
    id: 4543334987071488,
    personCompany: 'systemic',
    status: 2,
    accountType: 2,
    customerId: '0456585',
  },
  {
    id: 3966742869049344,
    personCompany: 'Joel Powlowski',
    status: 1,
    accountType: 1,
    customerId: '0158715',
  },
  {
    id: 7439898613121024,
    personCompany: 'hybrid',
    status: 2,
    accountType: 2,
    customerId: '3875540',
  },
  {
    id: 4527719230472192,
    personCompany: 'Mr. Thomas Bernhard-Yundt',
    status: 1,
    accountType: 1,
    customerId: '0050391',
  },
  {
    id: 6146823769030656,
    personCompany: 'asynchronous',
    status: 2,
    accountType: 2,
    customerId: '0006552',
  },
  {
    id: 4928166040698880,
    personCompany: 'Harold Cartwright',
    status: 1,
    accountType: 1,
    customerId: '0084928',
  },
  {
    id: 8057657258672128,
    personCompany: '6th generation',
    status: 2,
    accountType: 2,
    customerId: '8892833',
  },
];

export const getPostUserMock = () => ({
  id: '0005559',
  status: 1,
  accountType: 1,
  customerId: '0002483',
  userName: 'ASH2fPCaS5mIo0FuI',
  firstName: 'Rudy',
  lastName: 'Denesik',
  email: 'Fatima_Hyatt20@gmail.com',
  mobile: '420-559-5034 x358',
});

export const getGetUserByIdMock = () => ({
  id: '2428368',
  status: 1,
  accountType: 1,
  customerId: '3195347',
  userName: 'LL9ySt88uH0yOr',
  firstName: 'Johnpaul',
  lastName: 'Pacocha-Boyer',
  email: 'Jennie70@gmail.com',
  mobile: '447-527-1232 x31604',
});

export const getGetEnumsMock = () => ({
  accountTypes: [
    { id: 1, label: 'Personal' },
    { id: 2, label: 'Corporate' },
  ],
  statuses: [
    { id: 1, label: 'Active' },
    { id: 2, label: 'Passive' },
  ],
});

export const getSwaggerEsarjMock = () => [
  http.get('*/users', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getListUsersMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.post('*/users', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getPostUserMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.get('*/users/:userId', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetUserByIdMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.get('*/enums', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetEnumsMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
];
