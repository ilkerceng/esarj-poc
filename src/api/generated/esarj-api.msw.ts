/**
 * Generated by orval v6.21.0 🍺
 * Do not edit manually.
 * Swagger Esarj
 * OpenAPI spec version: 1.0.0
 */
import { HttpResponse, delay, http } from 'msw';

export const getListUsersMock = () => [
  {
    id: 2691041897480192,
    personCompany: 'Sheldon Gusikowski',
    status: 1,
    accountType: 1,
    customerId: '0659804',
  },
  {
    id: 388997348065280,
    personCompany: 'intangible',
    status: 2,
    accountType: 2,
    customerId: '0069359',
  },
  {
    id: 1475710430478336,
    personCompany: 'Olivia Witting-Metz MD',
    status: 1,
    accountType: 1,
    customerId: '0525077',
  },
  {
    id: 1049832749793280,
    personCompany: 'mobile',
    status: 2,
    accountType: 2,
    customerId: '0000407',
  },
  {
    id: 4150325617360896,
    personCompany: 'Susan Ondricka',
    status: 1,
    accountType: 1,
    customerId: '0000763',
  },
  {
    id: 3927311764160512,
    personCompany: 'methodical',
    status: 2,
    accountType: 2,
    customerId: '0961375',
  },
  {
    id: 7235266936832000,
    personCompany: 'Erika Boehm DVM',
    status: 1,
    accountType: 1,
    customerId: '0008244',
  },
  {
    id: 5533623115579392,
    personCompany: 'radical',
    status: 2,
    accountType: 2,
    customerId: '8806340',
  },
  {
    id: 459362950709248,
    personCompany: 'Carmen Treutel',
    status: 1,
    accountType: 1,
    customerId: '0002654',
  },
  {
    id: 6494020003954688,
    personCompany: 'fresh-thinking',
    status: 2,
    accountType: 2,
    customerId: '0561136',
  },
];

export const getPostUserMock = () => ({
  id: '0004347',
  status: 1,
  accountType: 1,
  customerId: '0967466',
  userName: 'JoYJQHiTMsBv4sZ3Uf',
  firstName: 'Jenifer',
  lastName: 'Wilkinson',
  email: 'Jermain_Metz@hotmail.com',
  phone: '+90 (356) 104 6361',
});

export const getGetUserByIdMock = () => ({
  id: '0897557',
  status: 1,
  accountType: 1,
  customerId: '9843888',
  userName: 'ILGa9WTNc',
  firstName: 'Okey',
  lastName: 'Torphy',
  email: 'Jody_Farrell29@hotmail.com',
  phone: '+90 (704) 973 8195',
});

export const getGetEnumsMock = () => ({
  accountTypes: [
    { id: 1, label: 'Personal' },
    { id: 2, label: 'Corporate' },
  ],
  statuses: [
    { id: 1, label: 'Active' },
    { id: 2, label: 'Passive' },
  ],
});

export const getSwaggerEsarjMock = () => [
  http.get('*/users', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getListUsersMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.post('*/users', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getPostUserMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.get('*/users/:userId', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetUserByIdMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.get('*/enums', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetEnumsMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
];
