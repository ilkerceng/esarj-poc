/**
 * Generated by orval v6.21.0 🍺
 * Do not edit manually.
 * Swagger Esarj
 * OpenAPI spec version: 1.0.0
 */
import { HttpResponse, delay, http } from 'msw';

export const getListUsersMock = () => [
  {
    id: 2180620088246272,
    personCompany: 'Max Wisoky',
    status: false,
    accountType: 1,
    customerId: '0000215',
  },
  {
    id: 7794705404264448,
    personCompany: 'zero administration',
    status: true,
    accountType: 2,
    customerId: '0013172',
  },
  {
    id: 6882601809739776,
    personCompany: 'Noel Rohan',
    status: true,
    accountType: 1,
    customerId: '0016544',
  },
  {
    id: 3585177158680576,
    personCompany: 'dynamic',
    status: false,
    accountType: 2,
    customerId: '0003922',
  },
  {
    id: 6191000133304320,
    personCompany: 'Peter Lynch-Smitham',
    status: true,
    accountType: 1,
    customerId: '5425171',
  },
  {
    id: 5823930224869376,
    personCompany: 'bi-directional',
    status: false,
    accountType: 2,
    customerId: '0008738',
  },
  {
    id: 6491162082803712,
    personCompany: 'Loretta Pouros',
    status: false,
    accountType: 1,
    customerId: '0054391',
  },
  {
    id: 6964655555608576,
    personCompany: '24/7',
    status: false,
    accountType: 2,
    customerId: '0090821',
  },
  {
    id: 3739649566572544,
    personCompany: 'Jacob Predovic',
    status: false,
    accountType: 1,
    customerId: '0000438',
  },
  {
    id: 507866989461504,
    personCompany: 'zero administration',
    status: false,
    accountType: 2,
    customerId: '0000463',
  },
];

export const getPostUserMock = () => ({
  id: 5112554336550912,
  status: false,
  accountType: 1,
  customerId: '0448936',
  userName: 'Ws330Ed2vOazQNc',
  firstName: 'Rosie',
  lastName: 'Kutch',
  email: 'Rebecca.Feest@hotmail.com',
  mobile: '551-696-9852 x9108',
});

export const getGetUserByIdMock = () => ({
  id: 2888840041725952,
  status: false,
  accountType: 1,
  customerId: '0001266',
  userName: 'UIn7qC3EsWH99yYjKiy',
  firstName: 'Dallin',
  lastName: 'Feeney',
  email: 'Ulices_Corwin@gmail.com',
  mobile: '1-623-341-3206 x1276',
});

export const getGetEnumsMock = () => ({
  accountTypes: [
    { id: 1, label: 'Personal' },
    { id: 2, label: 'Corporate' },
  ],
  statuses: [
    { id: 1, label: 'Active' },
    { id: 2, label: 'Passive' },
  ],
});

export const getSwaggerEsarjMock = () => [
  http.get('*/users', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getListUsersMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.post('*/users', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getPostUserMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.get('*/users/:userId', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetUserByIdMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
  http.get('*/enums', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetEnumsMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
];
